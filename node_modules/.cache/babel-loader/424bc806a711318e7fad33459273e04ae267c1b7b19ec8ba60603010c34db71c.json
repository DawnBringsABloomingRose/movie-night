{"ast":null,"code":"// form item name black list.  in form ,you can use form.id get the form item element.\n// use object hasOwnProperty will get better performance if black list is longer.\nconst formItemNameBlackList = ['parentNode'];\n// default form item id prefix.\nconst defaultItemNamePrefixCls = 'form_item';\nexport function toArray(candidate) {\n  if (candidate === undefined || candidate === false) return [];\n  return Array.isArray(candidate) ? candidate : [candidate];\n}\nexport function getFieldId(namePath, formName) {\n  if (!namePath.length) {\n    return undefined;\n  }\n  const mergedId = namePath.join('_');\n  if (formName) {\n    return `${formName}_${mergedId}`;\n  }\n  const isIllegalName = formItemNameBlackList.includes(mergedId);\n  return isIllegalName ? `${defaultItemNamePrefixCls}_${mergedId}` : mergedId;\n}\n/**\n * Get merged status by meta or passed `validateStatus`.\n */\nexport function getStatus(errors, warnings, meta, defaultValidateStatus, hasFeedback, validateStatus) {\n  let status = defaultValidateStatus;\n  if (validateStatus !== undefined) {\n    status = validateStatus;\n  } else if (meta.validating) {\n    status = 'validating';\n  } else if (errors.length) {\n    status = 'error';\n  } else if (warnings.length) {\n    status = 'warning';\n  } else if (meta.touched || hasFeedback && meta.validated) {\n    // success feedback should display when pass hasFeedback prop and current value is valid value\n    status = 'success';\n  }\n  return status;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}