{"ast":null,"code":"\"use client\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useContext, useMemo } from 'react';\nimport RCTour from '@rc-component/tour';\nimport classNames from 'classnames';\nimport getPlacements from '../_util/placements';\nimport { ConfigContext } from '../config-provider';\nimport { useToken } from '../theme/internal';\nimport TourPanel from './panelRender';\nimport PurePanel from './PurePanel';\nimport useStyle from './style';\nconst Tour = props => {\n  const customizePrefixCls = props.prefixCls,\n    type = props.type,\n    rootClassName = props.rootClassName,\n    indicatorsRender = props.indicatorsRender,\n    steps = props.steps,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"rootClassName\", \"indicatorsRender\", \"steps\"]);\n  const _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls,\n    direction = _useContext.direction;\n  const prefixCls = getPrefixCls('tour', customizePrefixCls);\n  const _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  const _useToken = useToken(),\n    _useToken2 = _slicedToArray(_useToken, 2),\n    token = _useToken2[1];\n  const mergedSteps = useMemo(() => steps === null || steps === void 0 ? void 0 : steps.map(step => {\n    var _a;\n    return Object.assign(Object.assign({}, step), {\n      className: classNames(step.className, {\n        [`${prefixCls}-primary`]: ((_a = step.type) !== null && _a !== void 0 ? _a : type) === 'primary'\n      })\n    });\n  }), [steps, type]);\n  const builtinPlacements = getPlacements({\n    arrowPointAtCenter: true,\n    autoAdjustOverflow: true,\n    offset: token.marginXXS,\n    arrowWidth: token.sizePopupArrow,\n    borderRadius: token.borderRadius\n  });\n  const customClassName = classNames({\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, hashId, rootClassName);\n  const mergedRenderPanel = (stepProps, stepCurrent) => /*#__PURE__*/React.createElement(TourPanel, {\n    type: type,\n    stepProps: stepProps,\n    current: stepCurrent,\n    indicatorsRender: indicatorsRender\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(RCTour, Object.assign({}, restProps, {\n    rootClassName: customClassName,\n    prefixCls: prefixCls,\n    animated: true,\n    renderPanel: mergedRenderPanel,\n    builtinPlacements: builtinPlacements,\n    steps: mergedSteps\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Tour.displayName = 'Tour';\n}\nTour._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default Tour;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}